import org.cloudbus.cloudsim.core.CloudSim;
import org.cloudbus.cloudsim.core.SimEntity;
import org.cloudbus.cloudsim.core.SimEvent;

public class LoadBalancer extends SimEntity {
    private double[] utilization;
    private int nextVMIndex;

    public LoadBalancer(String name, int numVMs) {
        super(name);
        this.utilization = new double[numVMs];
        this.nextVMIndex = 0;
    }

    @Override
    public void startEntity() {
        // Initialization tasks
    }

    @Override
    public void processEvent(SimEvent ev) {
        if (ev.getTag() == LOAD_BALANCER_EVENT) {
            Request request = (Request) ev.getData();
            
            // Find the VM with the lowest utilization
            int selectedVMIndex = getLowestUtilizationVMIndex();
            VirtualMachine selectedVM = Datacenter.getVM(selectedVMIndex);
            
            // Assign the request to the selected VM
            selectedVM.addRequest(request);
        }
        // Other events handling
    }

    @Override
    public void shutdownEntity() {
        // Clean-up tasks
    }

    private int getLowestUtilizationVMIndex() {
        double minUtilization = Double.MAX_VALUE;
        int selectedVMIndex = 0;

        for (int i = 0; i < utilization.length; i++) {
            if (utilization[i] < minUtilization) {
                minUtilization = utilization[i];
                selectedVMIndex = i;
            }
        }

        return selectedVMIndex;
    }

    private void updateUtilization() {
        for (int i = 0; i < utilization.length; i++) {
            VirtualMachine vm = Datacenter.getVM(i);
            utilization[i] = vm.getUtilization();
        }
    }
}
